version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"      
      - "15672:15672"    
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend

  coordinateur:
    build:
      context: ./coordinateur
    volumes:
      - ./shared:/data
    networks:
      - backend
    depends_on:
      - rabbitmq
    command: >
      sh -c "
        until nc -z rabbitmq 5672;
        do echo 'Attente RabbitMQ...'; sleep 1; done;
        echo 'RabbitMQ prêt';
        python coordinateur.py
      "
    
  collecteur:
    build:
      context: ./collecteur
    volumes:
      - ./shared:/data
    networks:
      - backend
    depends_on:
      - rabbitmq
    command: >
      sh -c "
        until nc -z rabbitmq 5672;
        do echo 'Attente RabbitMQ...'; sleep 1; done;
        echo 'RabbitMQ prêt';
        python -u collecteur.py
      "
  
  annoteur:
    build:
      context: ./annoteur-automatique
    volumes:
      - ./shared:/data
    networks:
      - backend
    depends_on:
      - rabbitmq
    command: >
      sh -c "
        until nc -z rabbitmq 5672;
        do echo 'Attente RabbitMQ...'; sleep 1; done;
        echo 'RabbitMQ prêt';
        python -u annoteur.py
      "

  annoteur_manuelle:
    build:
      context: ./annoteur-manuelle
    volumes:
      - ./shared:/data
    networks:
      - backend
    ports:
      - "5000:5000"

  recommandation:
    build:
      context: ./recommandation
      dockerfile: Dockerfile
    volumes:
      - ./shared:/data
    networks:
      - backend
    depends_on:
      - rabbitmq
    command: >
      sh -c "
        until nc -z rabbitmq 5672;
        do echo 'Attente RabbitMQ...'; sleep 1; done;
        echo 'RabbitMQ prêt';
        spark-submit /app/analyse_recommandation_spark.py
      "
  visualisation:
    build:
      context: ./visualisation
      dockerfile: Dockerfile
    volumes:
      - ./shared:/data
    networks:
      - backend
    depends_on:
      - rabbitmq
    command: >
      sh -c "
        until nc -z rabbitmq 5672;
        do echo 'Attente RabbitMQ...'; sleep 1; done;
        echo 'RabbitMQ prêt';
        jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
      "
    ports:
      - "8888:8888"

volumes:
  rabbitmq_data:

networks:
  backend:
